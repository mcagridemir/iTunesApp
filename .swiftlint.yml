disabled_rules: # rule identifiers to exclude from running
  - control_statement
  - line_length
  - trailing_whitespace
  - unused_closure_parameter
  - cyclomatic_complexity
  - function_body_length
  # - empty_count
  - vertical_parameter_alignment
  - identifier_name
  - operator_whitespace
  - large_tuple
  - nesting
  - todo
  - unused_optional_binding
  - force_cast
  - force_try
  - type_body_length
  - file_length
  - function_parameter_count
  - multiple_closures_with_trailing_closure
  - type_name
  - force_unwrapping
  - overridden_super_call
  - shorthand_operator
  - implicit_return
opt_in_rules: # some rules are only opt-in
  - force_unwrapping
  - fallthrough
  - implicit_return
  - toggle_bool
  - modifier_order
  - override_in_extension
  - private_action
  - prohibited_super_call
  - redundant_nil_coalescing
  - redundant_type_annotation
  - sorted_imports
  - static_operator
  - overridden_super_call
  - attributes
  - switch_case_on_newline
  - unavailable_function
  - unused_enumerated
  - unused_import
  - unused_private_declaration
  - valid_ibinspectable
  - yoda_condition
  - sorted_first_last
  - contains_over_first_not_nil
  - empty_string
  - first_where
  # Find all the available rules by running:
  # swiftlint rules
included: # paths to include during linting. `--path` is ignored if present.
  - iTunesApp
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Pods
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
 - explicit_self

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
#force_cast: warning # implicitly
#force_try:
#  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
#line_length: 500
# they can set both implicitly with an array

force_unwrapping:
  severity: error
type_body_length:
  - 300 # warning
  - 400 # error
# or they can set both explicitly
file_length:
  warning: 500
  error: 1200


force_unwrapping:
  severity: error
fallthrough:
  severity: error
override_in_extension:
  severity: error
prohibited_super_call:
  severity: error
overridden_super_call:
  severity: error

# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names

type_name:
  min_length: 3 # only warning
  max_length: # warning and error
    warning: 50
    error: 100
  excluded: iPhone # excluded via string
identifier_name:
  min_length: 2 # only min_length
  max_length: # warning and error
    warning: 50
    error: 100
